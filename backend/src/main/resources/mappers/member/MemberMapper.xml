<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.admin.the_climbing_night.member.mapper.MemberMapper">
  <select id="getMemberInfoByJoin" parameterType="com.admin.the_climbing_night.member.domain.req.GetMemberInfoByJoinRequest" resultType="com.admin.the_climbing_night.member.vo.GetMemberInfoByJoinVo">
    SELECT
        m.id
        , m.name
        , IFNULL(m.birthDt, '') birthDt
        , d.degree
    FROM
        member m
        JOIN degree d ON m.degreeFk = d.id
    WHERE
        1 = 1
        AND name LIKE CONCAT('%', #{name}, '%');
  </select>

  <select id="getDegrees" resultType="com.admin.the_climbing_night.member.vo.GetDegreeForMemberVo">
    SELECT
      id
      , degree
    FROM
      degree
    ORDER BY
      CAST(id AS UNSIGNED) DESC;
  </select>

  <select id="getMembers" parameterType="com.admin.the_climbing_night.member.domain.req.GetMembersForMemberRequest" resultType="com.admin.the_climbing_night.member.vo.GetMemberForMemberVo">
    SELECT
      m.id
      , CONCAT(m.name, ' ', IFNULL(SUBSTRING(m.birthDt, 3, 2), '')) name
      , CASE
          WHEN ad.grade = 60 THEN '회원'
          WHEN ad.grade = 50 THEN '회원'
          WHEN ad.grade = 40 THEN '매니저'
          WHEN ad.grade = 30 THEN '운영진'
          WHEN ad.grade = 20 THEN '부회장'
          WHEN ad.grade = 10 THEN '회장'
          ELSE '회원'
        END AS grade
      , d.degree
      , l.level
      , l.color
      , COUNT(
          CASE
            WHEN YEAR(me.hostDt) = YEAR(CURDATE()) AND ms.id = '10' THEN 1
          END
      ) count_this_year
      , COUNT(
          CASE
            WHEN me.hostDt >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND ms.id = '10' THEN 1
          END
      ) count_last_1_year
      , COUNT(
          CASE
            WHEN me.hostDt >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND ms.id = '10' THEN 1
          END
      ) count_last_3_months
      , IFNULL(ad.grade, 70) unsignedGrade
    FROM
      member m
      JOIN level l ON m.levelFK = l.id
      JOIN degree d ON m.degreeFK = d.id
      LEFT JOIN admin ad ON m.id = ad.memberFK
      LEFT JOIN attend at ON m.id = at.memberFK
      LEFT JOIN meeting me ON at.meetingFK = me.id AND me.hostDt >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)
      LEFT JOIN meetingStatus ms ON me.meetingStatusFK = ms.id
    WHERE
      m.id != 'TCN0'
      <if test="name != null and name != ''">AND m.name LIKE CONCAT('%', #{name}, '%')</if>
      <if test="degreeFk != null and degreeFk != ''">AND m.degreeFK = #{degreeFk}</if>
      <if test="startJoinDt != null and startJoinDt != ''">
        <![CDATA[
          AND m.joinDt >= #{startJoinDt}
        ]]>
      </if>
      <if test="endJoinDt != null and endJoinDt != ''">
        <![CDATA[
          AND m.joinDt <= #{endJoinDt}
        ]]>
      </if>
    GROUP BY
      m.id,
      m.name,
      ad.grade,
      d.degree,
      l.level,
      l.color
    ORDER BY
      unsignedGrade, d.id;
  </select>

  <select id="getDegrees" parameterType="java.lang.String" resultType="com.admin.the_climbing_night.member.vo.GetDegreeForMemberVo">
    SELECT
      m.name
    FROM
      member m
      JOIN level l ON m.levelFK = l.id
      JOIN degree d ON m.degreeFK = d.id
      LEFT JOIN admin a ON m.id = a.memberFK
      LEFT JOIN attend at ON m.id = at.memberFK
      LEFT JOIN meeting me ON at.meetingFK = me.id
    WHERE
      m.id = #{id}
  </select>
</mapper>